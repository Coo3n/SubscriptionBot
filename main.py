from aiogram import Bot, types
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from Token import TG_TOKEN
from DataBase import DataBase
import Keyboard as kb 


bot = Bot(token = TG_TOKEN)
storage = MemoryStorage()
dispetcher = Dispatcher(bot, storage = storage)
db = DataBase()


async def anti_flood(*args, **kwargs):
    ans = args[0]
    await ans.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Å–ø–∞–º—å—Ç–µ! –ù–∞–∂–∏–º–∞–π—Ç–µ —Å–ø–æ–∫–æ–π–Ω–µ–µ :)")
        

@dispetcher.message_handler(commands = ['start'])
@dispetcher.throttled(anti_flood, rate = 2)
async def process_start_command(message: types.Message):
    user_exists = await db.user_exists(message.from_user.id)
    if user_exists == False:
        await db.add_user(message.from_user.id)

    await message.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –¥–∞–Ω–Ω—ã–π –ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏\n–ø–æ –ø—Ä–æ–¥–∞–∂–µ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª!\n–ß—Ç–æ–±—ã –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫! ", reply_markup = kb.main_menu)


@dispetcher.message_handler(Text(equals = "ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞"))
async def show_help_admin(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message_id)
    await message.answer("ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞\nüì® –ü–æ –≤—Å–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º ‚Äî @coo3n")
        

@dispetcher.message_handler(Text(equals = "üë§ –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç"))
@dispetcher.throttled(anti_flood, rate = 1)
async def show_user_account(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message_id)
    cnt_money = await db.get_user_money(message.from_user.id)
    await message.answer("üë§ –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç\n‚Äî ID: " + str(message.from_user.id) + "\n‚Äî –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: " + str(cnt_money[0][0]) + " —Ä—É–±")
    

@dispetcher.message_handler(Text(equals = "üóì –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã"))
async def show_all_rates(message: types.Message):
    await bot.delete_message(message.from_user.id, message.message_id)
    await message.answer("üóì –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã \n–í—ã–±–∏—Ä–∞–π –ª—é–±–æ–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–µ–±—è —Ç–∞—Ä–∏—Ñ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏ –æ–ø–ª–∞—Ç—É –ø–æ ü•ùQIWI!", reply_markup = kb.menu_—Åhoice_rate)


if __name__ == '__main__':
    executor.start_polling(dispetcher, skip_updates = True)